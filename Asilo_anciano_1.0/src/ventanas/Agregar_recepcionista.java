package ventanas;

import java.awt.Color;
import clases.recepcionista;
//import conexion_bada.Insert_doctor;
//import conexion_bada.Insert;
import conexion_bada.Insert_recepcionista;
import conexion_bada.Insert_usuario;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import clases.validaciones;
import conexion_bada.Conexion;
import conexion_bada.Insert_Persona;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Agregar_recepcionista extends javax.swing.JFrame {

    Insert_recepcionista recep = new Insert_recepcionista();
    Conexion mi_cone = new Conexion();
    validaciones misvalidaciones = new validaciones();
    String hora_ingresoAux;
    String hora_salidaAux;

    DateFormat df = DateFormat.getDateInstance();
    ArrayList<recepcionista> lista_recepcionista = new ArrayList();

    public Agregar_recepcionista() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public Agregar_recepcionista(String cedula) {
        initComponents();
        this.setLocationRelativeTo(null);
        Guardar_recepcionista.setVisible(false);
        String SQL_SELECT = "SELECT * FROM recepcionista WHERE cedula = " + cedula + ";";
        llenar_recepcionista();
    }

    public void llenar_recepcionista() {

        List<recepcionista> com = recep.ListaRecepcionista();
        com.stream().forEach(p -> {
            text_codigo_recepcionista.setText(p.getCodigo().toString());
            text_cedula_recepcionista.setText(p.getCedula().toString());
            text_PrimerNombre_recepcionista.setText(p.getPri_nomb().toString());
            text_SegundoNombre_recepcionista.setText(p.getSeg_nombre().toString());
            text_PrimerApellido_recepcionista.setText(p.getPrim_apell().toString());
            text_segundoApellido_recepcionista.setText(p.getSeg_apelli().toString());
            text_email_recepcionista.setText(p.getCorreo().toString());
            text_direccion_recepcionista.setText(p.getDireccion());
            text_celular_recepcionista.setText(p.getTelefono());

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        Genero_recepcionista = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        text_cedula_recepcionista = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        text_SegundoNombre_recepcionista = new javax.swing.JTextField();
        text_PrimerNombre_recepcionista = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        text_codigo_recepcionista = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        text_PrimerApellido_recepcionista = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        text_direccion_recepcionista = new javax.swing.JTextField();
        text_segundoApellido_recepcionista = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Femenino_recepcionista = new javax.swing.JRadioButton();
        Masculino_recepcionista = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Spinner_HoraSalida_recepcionista = new javax.swing.JSpinner();
        Spinner_MinutosEntrada_recepcionista = new javax.swing.JSpinner();
        Spinner_HoraEntrada_recepcionista = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        Fecha_Nacimiento_recepcionista = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        text_email_recepcionista = new javax.swing.JTextField();
        text_celular_recepcionista = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo_sangre_recepcionista = new javax.swing.JComboBox<>();
        Regresar_recepcionista = new javax.swing.JButton();
        Guardar_recepcionista = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Spinner_MinutosSalida_recepcionista = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        txt_contrasena = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(231, 226, 131));

        text_cedula_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_cedula_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_cedula_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_cedula_recepcionistaMousePressed(evt);
            }
        });
        text_cedula_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_cedula_recepcionistaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("Cedula:");

        text_SegundoNombre_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_SegundoNombre_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_SegundoNombre_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_SegundoNombre_recepcionistaMousePressed(evt);
            }
        });

        text_PrimerNombre_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_PrimerNombre_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_PrimerNombre_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_PrimerNombre_recepcionistaMousePressed(evt);
            }
        });
        text_PrimerNombre_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_PrimerNombre_recepcionistaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("CÃ³digo:");

        text_codigo_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_codigo_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_codigo_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_codigo_recepcionistaMousePressed(evt);
            }
        });
        text_codigo_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_codigo_recepcionistaActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Datos Personales");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        text_PrimerApellido_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_PrimerApellido_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_PrimerApellido_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_PrimerApellido_recepcionistaMousePressed(evt);
            }
        });
        text_PrimerApellido_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_PrimerApellido_recepcionistaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Primer Nombre:");

        text_direccion_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_direccion_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_direccion_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_direccion_recepcionistaMousePressed(evt);
            }
        });
        text_direccion_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_direccion_recepcionistaActionPerformed(evt);
            }
        });

        text_segundoApellido_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_segundoApellido_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_segundoApellido_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_segundoApellido_recepcionistaMousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Segundo Nombre:");

        Genero_recepcionista.add(Femenino_recepcionista);
        Femenino_recepcionista.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Femenino_recepcionista.setText("F");
        Femenino_recepcionista.setOpaque(false);

        Genero_recepcionista.add(Masculino_recepcionista);
        Masculino_recepcionista.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Masculino_recepcionista.setText("M");
        Masculino_recepcionista.setOpaque(false);
        Masculino_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masculino_recepcionistaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Sexo:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("Hora de Ingreso");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Hora de Salida");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Fecha de nacimiento:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Primer Apellido:");

        text_email_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_email_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_email_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_email_recepcionistaMousePressed(evt);
            }
        });

        text_celular_recepcionista.setForeground(new java.awt.Color(102, 102, 102));
        text_celular_recepcionista.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_celular_recepcionista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_celular_recepcionistaMousePressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Celular:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Email:");

        combo_sangre_recepcionista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));

        Regresar_recepcionista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        Regresar_recepcionista.setToolTipText("REGRESAR");
        Regresar_recepcionista.setBorder(null);
        Regresar_recepcionista.setOpaque(false);
        Regresar_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regresar_recepcionistaActionPerformed(evt);
            }
        });

        Guardar_recepcionista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salvar (1).png"))); // NOI18N
        Guardar_recepcionista.setToolTipText("GUARDAR");
        Guardar_recepcionista.setBorder(null);
        Guardar_recepcionista.setOpaque(false);
        Guardar_recepcionista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Guardar_recepcionistaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Segundo Apellido:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Tipo de Sangre:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Direccion:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRAR RECEPCIONISTA");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("CREAR USUARIO");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("NUEVO USUARIO:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("NUEVA CONTRASEÃA:");

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        jButton1.setText("MODIFICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(334, 334, 334))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(Guardar_recepcionista)
                                .addGap(88, 88, 88)
                                .addComponent(Regresar_recepcionista)
                                .addGap(45, 45, 45)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(text_PrimerNombre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel5)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(text_cedula_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(text_direccion_recepcionista)
                                                .addComponent(text_PrimerApellido_recepcionista)
                                                .addComponent(text_email_recepcionista)
                                                .addComponent(text_segundoApellido_recepcionista, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                                            .addComponent(text_SegundoNombre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(27, 27, 27)
                                        .addComponent(Masculino_recepcionista)
                                        .addGap(18, 18, 18)
                                        .addComponent(Femenino_recepcionista))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(44, 44, 44)
                                        .addComponent(combo_sangre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(78, 78, 78)
                                        .addComponent(text_celular_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(58, 58, 58)
                                        .addComponent(text_codigo_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(51, 51, 51)
                                        .addComponent(Fecha_Nacimiento_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(Spinner_HoraEntrada_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Spinner_MinutosEntrada_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel15))
                                        .addGap(72, 72, 72)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Spinner_HoraSalida_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)
                                                .addComponent(Spinner_MinutosSalida_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel16)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(61, 61, 61)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel18)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_cedula_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(text_codigo_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel17))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Fecha_Nacimiento_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Masculino_recepcionista)
                            .addComponent(Femenino_recepcionista))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(combo_sangre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(text_PrimerNombre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(text_SegundoNombre_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(text_celular_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Spinner_HoraEntrada_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Spinner_MinutosEntrada_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Spinner_HoraSalida_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Spinner_MinutosSalida_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(text_PrimerApellido_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(text_segundoApellido_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(text_email_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(text_direccion_recepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Guardar_recepcionista)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txt_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addComponent(Regresar_recepcionista)))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 890));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Masculino_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masculino_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Masculino_recepcionistaActionPerformed

    private void Guardar_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Guardar_recepcionistaActionPerformed
        try {
            RegistrarRecepcionista();
        } catch (SQLException ex) {
            Logger.getLogger(Agregar_administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Guardar_recepcionistaActionPerformed

    private void Regresar_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regresar_recepcionistaActionPerformed
        this.dispose();
        new crud_recepcionista().setVisible(true);
    }//GEN-LAST:event_Regresar_recepcionistaActionPerformed

    private void text_cedula_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_cedula_recepcionistaMousePressed

      
        text_cedula_recepcionista.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_cedula_recepcionistaMousePressed

    private void text_cedula_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_cedula_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_cedula_recepcionistaActionPerformed

    private void text_codigo_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_codigo_recepcionistaMousePressed
      
        text_codigo_recepcionista.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_codigo_recepcionistaMousePressed

    private void text_codigo_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_codigo_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_codigo_recepcionistaActionPerformed

    private void text_PrimerNombre_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_PrimerNombre_recepcionistaMousePressed
        
        text_PrimerNombre_recepcionista.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerNombre_recepcionistaMousePressed

    private void text_PrimerNombre_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_PrimerNombre_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerNombre_recepcionistaActionPerformed

    private void text_SegundoNombre_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_SegundoNombre_recepcionistaMousePressed
       
        text_SegundoNombre_recepcionista.setForeground(Color.BLACK);
        // TODO add your handling code here:
    }//GEN-LAST:event_text_SegundoNombre_recepcionistaMousePressed

    private void text_PrimerApellido_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_PrimerApellido_recepcionistaMousePressed
     
        text_PrimerApellido_recepcionista.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerApellido_recepcionistaMousePressed

    private void text_direccion_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_direccion_recepcionistaMousePressed
        
        text_direccion_recepcionista.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_direccion_recepcionistaMousePressed

    private void text_direccion_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_direccion_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_direccion_recepcionistaActionPerformed

    private void text_email_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_email_recepcionistaMousePressed
       
        text_email_recepcionista.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_email_recepcionistaMousePressed

    private void text_celular_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_celular_recepcionistaMousePressed
       
        text_celular_recepcionista.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_celular_recepcionistaMousePressed

    private void text_segundoApellido_recepcionistaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_segundoApellido_recepcionistaMousePressed
        
        text_segundoApellido_recepcionista.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_segundoApellido_recepcionistaMousePressed

    private void text_PrimerApellido_recepcionistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_PrimerApellido_recepcionistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerApellido_recepcionistaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        modificar_recepcionista();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void modificar_recepcionista() {
        String genero = "";
        if (Masculino_recepcionista.isSelected()) {
            genero = "hombre";
        }
        if (Femenino_recepcionista.isSelected()) {
            genero = "mujer";
        }
        String tipoo_sangre = combo_sangre_recepcionista.getSelectedItem().toString();

        String dia = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.DAY_OF_MONTH));
        String mes = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.MONTH) + 1);
        String aÃ±o = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.YEAR));
        String FechaNacimiento = (dia + "-" + mes + "-" + aÃ±o);
        String Hingreso, Mingreso, Hsalida, Msalida;
        Hingreso = Spinner_HoraEntrada_recepcionista.getValue().toString();
        Mingreso = Spinner_MinutosEntrada_recepcionista.getValue().toString();
        Hsalida = Spinner_HoraSalida_recepcionista.getValue().toString();
        Msalida = Spinner_MinutosSalida_recepcionista.getValue().toString();

        if (String.valueOf(Hingreso).length() == 1) {
            Hingreso = "0" + Hingreso;
        }
        if (String.valueOf(Mingreso).length() == 1) {
            Mingreso = "0" + Mingreso;
        }

        if (String.valueOf(Hsalida).length() == 1) {
            Hsalida = "0" + Hsalida;
        }
        if (String.valueOf(Msalida).length() == 1) {
            Msalida = "0" + Msalida;
        }

        hora_ingresoAux = Hingreso + ":" + Mingreso;
        hora_salidaAux = Hsalida + ":" + Msalida;
        
        
        mi_cone.InsertUpdateDeleteAcciones("UPDATE persona per SET  per_primer_nombre='" + text_PrimerNombre_recepcionista.getText() + "', per_segundo_nombre='" + text_SegundoNombre_recepcionista.getText() + "'"
                + ", per_primer_apellido='" + text_PrimerApellido_recepcionista.getText() + "', per_segundo_apellido='" + text_segundoApellido_recepcionista.getText() + "'"
                + ", per_correo='" + text_email_recepcionista.getText() + "', per_genero='" + genero + "', per_direccion='" + text_direccion_recepcionista.getText() + "', per_telefono='" + text_celular_recepcionista.getText() + "', per_tipo_sangre='" + tipoo_sangre + "',per_fecha_nacimiento='" + FechaNacimiento + "' WHERE per_cedula='" + text_cedula_recepcionista.getText() + "'");
        
        mi_cone.InsertUpdateDeleteAcciones("UPDATE recepcionista SET recep_hora_ingreso='" + hora_ingresoAux + "',recep_hora_salida='" + hora_salidaAux + "' WHERE recep_cedula='" + text_cedula_recepcionista.getText() + "'");
       
        limpiar();
    }

    public void cargarcod() {
        text_codigo_recepcionista.setEnabled(false);
        text_codigo_recepcionista.setText(String.valueOf(recep.cargarcodigo()));
    }

    public void RegistrarRecepcionista() throws SQLException {
        Insert_usuario usu = new Insert_usuario();

        Insert_Persona per = new Insert_Persona();
        try {
            if (validaciones()) {
                if (per.validarduplicado(text_cedula_recepcionista.getText())) {
                    if (usu.validarNomduplicado(txt_usuario.getText())) {
                        String genero = "";

                        recep.setCodigo(text_codigo_recepcionista.getText());
                        recep.setCedula(text_cedula_recepcionista.getText());
                        recep.setPri_nomb(text_PrimerNombre_recepcionista.getText());
                        recep.setSeg_nombre(text_SegundoNombre_recepcionista.getText());
                        recep.setPrim_apell(text_PrimerApellido_recepcionista.getText());
                        recep.setSeg_apelli(text_segundoApellido_recepcionista.getText());
                        recep.setDireccion(text_direccion_recepcionista.getText());
                        if (Masculino_recepcionista.isSelected()) {
                            genero = "hombre";
                        }
                        if (Femenino_recepcionista.isSelected()) {
                            genero = "mujer";
                        }
                        recep.setGenero(genero);

                        String dia = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.DAY_OF_MONTH));
                        String mes = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.MONTH) + 1);
                        String aÃ±o = Integer.toString(Fecha_Nacimiento_recepcionista.getCalendar().get(Calendar.YEAR));
                        String FechaNacimiento = (dia + "-" + mes + "-" + aÃ±o);
                        //String Fecha = df.format(Fecha_Nacimiento_recepcionista.getDate());
                        recep.setFecha_Nacimiento(FechaNacimiento);

                        recep.setCorreo(text_email_recepcionista.getText());
                        recep.setTelefono(text_celular_recepcionista.getText());
                        recep.setTipo_sangre(combo_sangre_recepcionista.getSelectedItem().toString());

                        String Hingreso, Mingreso, Hsalida, Msalida;
                        Hingreso = Spinner_HoraEntrada_recepcionista.getValue().toString();
                        Mingreso = Spinner_MinutosEntrada_recepcionista.getValue().toString();
                        Hsalida = Spinner_HoraSalida_recepcionista.getValue().toString();
                        Msalida = Spinner_MinutosSalida_recepcionista.getValue().toString();

                        if (String.valueOf(Hingreso).length() == 1) {
                            Hingreso = "0" + Hingreso;
                        }
                        if (String.valueOf(Mingreso).length() == 1) {
                            Mingreso = "0" + Mingreso;
                        }

                        if (String.valueOf(Hsalida).length() == 1) {
                            Hsalida = "0" + Hsalida;
                        }
                        if (String.valueOf(Msalida).length() == 1) {
                            Msalida = "0" + Msalida;
                        }

                        hora_ingresoAux = Hingreso + ":" + Mingreso;
                        hora_salidaAux = Hsalida + ":" + Msalida;
                        recep.setHora_ingreso(hora_ingresoAux);
                        recep.setHora_salida(hora_salidaAux);
                        recep.setCod_usuario(usu.obtenerUsuario());

                        usu.setUsuario(txt_usuario.getText());
                        usu.setContraseÃ±a(txt_contrasena.getText());

                        usu.InsertarUsuario();
                        recep.InsertarPersona();
                        if (recep.InsertarRecepcionista()) {
                            System.out.println("Conexion Exitosa");
                            limpiar();
                            cargarcod();
                        } else {
                            System.out.println("Conexion Erronea");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "El nombre de usuario ya existe");
                        txt_usuario.setText("");

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La recepcionista ya existe en el sistema");
                    text_cedula_recepcionista.setText("");

                }
            }
        } catch (NullPointerException n) {

        }
    }

    public boolean validaciones() {
        boolean validado = true;

        if (text_cedula_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la cedula");
        } else {
            if (!misvalidaciones.validar_cedula(text_cedula_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Cedula incorrecta");
                validado = false;
            }
        }
//
        if (text_PrimerNombre_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el primer nombre");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_PrimerNombre_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Primer nombre incorrecto");
                validado = false;
            }
        }
        if (text_SegundoNombre_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el segundo nombre");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_SegundoNombre_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Segundo nombre incorrecto");
                validado = false;
            }
        }
        if (text_PrimerApellido_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el primer apellido");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_PrimerApellido_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Primer apellido incorrecto");
                validado = false;
            }
        }
        if (text_segundoApellido_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el segundo apellido");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_segundoApellido_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Segundo apellido incorrecto");
                validado = false;
            }
        }
        if (text_direccion_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la direccion");
        } else {
            if (!misvalidaciones.validarDireccion(text_direccion_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Direccion invalida");
                validado = false;
            }
        }
        if (text_cedula_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el celular");
        } else {
            if (!misvalidaciones.validarTelefono(text_cedula_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Celular invalido");
                validado = false;
            }
        }
        if (text_email_recepcionista.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el correo");
        } else {
            if (!misvalidaciones.validarCorreo(text_email_recepcionista.getText())) {
                JOptionPane.showMessageDialog(this, "Correo invalido");
                validado = false;
            }
        }

        if (txt_usuario.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese un usuario");
        } else {
            if (!misvalidaciones.validarUsuario(txt_usuario.getText())) {
                JOptionPane.showMessageDialog(this, "Usuario invalido");
                validado = false;
            }
        }

        if (txt_contrasena.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese una contraseÃ±a");
        } else {
            if (!misvalidaciones.validarContrasena(txt_contrasena.getText())) {
                JOptionPane.showMessageDialog(this, "ContraseÃ±a invalida");
                validado = false;
            }
        }

        if ((Integer) Spinner_HoraEntrada_recepcionista.getValue() == 0) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Hora de entrada invalida");
        }
        if ((Integer) Spinner_HoraSalida_recepcionista.getValue() == 0) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Hora de salida invalida");
        }

        if (combo_sangre_recepcionista.getSelectedIndex() == 0) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Seleccione el tipo de sangre");
        }
//        System.out.println(String.valueOf(fecha_Nacimiento_paciente.getCalendar()));
        if (Fecha_Nacimiento_recepcionista.getDate() == null) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la fecha de nacimiento del administrador");
        }

        if (!Masculino_recepcionista.isSelected() && !Femenino_recepcionista.isSelected()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "seleccione un genero");
        }

        return validado;
    }

    public void limpiar() {
        text_codigo_recepcionista.setText("");
        text_cedula_recepcionista.setText("");
        text_PrimerNombre_recepcionista.setText("");
        text_SegundoNombre_recepcionista.setText("");
        text_PrimerApellido_recepcionista.setText("");
        text_segundoApellido_recepcionista.setText("");
        text_direccion_recepcionista.setText("");
        text_email_recepcionista.setText("");
        text_celular_recepcionista.setText("");
        Genero_recepcionista.clearSelection();
        Spinner_HoraEntrada_recepcionista.setValue(0);
        Spinner_HoraSalida_recepcionista.setValue(0);
        combo_sangre_recepcionista.setSelectedIndex(0);
        Fecha_Nacimiento_recepcionista.setCalendar(null);
        txt_usuario.setText("");
        txt_contrasena.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agregar_recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agregar_recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agregar_recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agregar_recepcionista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agregar_recepcionista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha_Nacimiento_recepcionista;
    private javax.swing.JRadioButton Femenino_recepcionista;
    private javax.swing.ButtonGroup Genero_recepcionista;
    private javax.swing.JButton Guardar_recepcionista;
    private javax.swing.JRadioButton Masculino_recepcionista;
    private javax.swing.JButton Regresar_recepcionista;
    private javax.swing.JSpinner Spinner_HoraEntrada_recepcionista;
    private javax.swing.JSpinner Spinner_HoraSalida_recepcionista;
    private javax.swing.JSpinner Spinner_MinutosEntrada_recepcionista;
    private javax.swing.JSpinner Spinner_MinutosSalida_recepcionista;
    private javax.swing.JComboBox<String> combo_sangre_recepcionista;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField text_PrimerApellido_recepcionista;
    private javax.swing.JTextField text_PrimerNombre_recepcionista;
    private javax.swing.JTextField text_SegundoNombre_recepcionista;
    private javax.swing.JTextField text_cedula_recepcionista;
    private javax.swing.JTextField text_celular_recepcionista;
    private javax.swing.JTextField text_codigo_recepcionista;
    private javax.swing.JTextField text_direccion_recepcionista;
    private javax.swing.JTextField text_email_recepcionista;
    private javax.swing.JTextField text_segundoApellido_recepcionista;
    private javax.swing.JTextField txt_contrasena;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
