package ventanas;

import java.awt.Color;
import clases.doctor;
import clases.usuario;
import conexion_bada.Insert_doctor;
import conexion_bada.Insert_usuario;
import java.text.DateFormat;
import java.util.ArrayList;
import clases.especialidad;
import java.text.DateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import clases.validaciones;
import conexion_bada.Conexion;
import conexion_bada.Insert;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import conexion_bada.Insert_especialidad;

public class agregar_doctor extends javax.swing.JFrame {

    Conexion mi_cone = new Conexion();
    DateFormat df = DateFormat.getDateInstance();
    ArrayList<doctor> lista_doctor = new ArrayList();

    validaciones misvalidaciones = new validaciones();
    Insert_doctor inser = new Insert_doctor();
    Conexion cone = new Conexion();

    public agregar_doctor() {
        initComponents();
        this.setLocationRelativeTo(null);
        LLenarComboBoxEspecialidad();
        cargarcod();
    }

    public agregar_doctor(String cedula) {
        initComponents();
        this.setLocationRelativeTo(null);
        Guardar_doctor.setVisible(false);
        String SQL_SELECT = "SELECT * FROM doctor WHERE cedula = " + cedula + ";";
        llenar_doctor();
    }
    public void llenar_doctor() {

            List<doctor> com = inser.ListaDoctor();
            com.stream().forEach(p -> {
                txtcodigo_doctor.setText(p.getCodigo().toString());
                text_cedula_doctor.setText(p.getCedula().toString());
                text_PrimerNombre_doctor.setText(p.getPri_nomb().toString());
                text_SegundoNombre_doctor.setText(p.getSeg_nombre().toString());
                text_PrimerApellido_doctor.setText(p.getPrim_apell().toString());
                text_SegundoApellido_doctor.setText(p.getSeg_apelli().toString());
                text_email_doctor.setText(p.getCorreo().toString());
                text_direccion_doctor.setText(p.getDireccion());
                text_celular_doctor.setText(p.getTelefono());

            });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_sexo = new javax.swing.ButtonGroup();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        Fecha_Nacimiento_doctor = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        text_celular_doctor = new javax.swing.JTextField();
        text_email_doctor = new javax.swing.JTextField();
        text_PrimerNombre_doctor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        text_PrimerApellido_doctor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Femenino_doctor = new javax.swing.JRadioButton();
        text_SegundoApellido_doctor = new javax.swing.JTextField();
        Masculino_doctor = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        combo_especialidad_doctor = new javax.swing.JComboBox<>();
        Guardar_doctor = new javax.swing.JButton();
        Regresar_doctor = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        text_direccion_doctor = new javax.swing.JTextField();
        combo_sangre_doctor = new javax.swing.JComboBox<>();
        text_cedula_doctor = new javax.swing.JTextField();
        text_SegundoNombre_doctor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtcodigo_doctor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtnuevo_usuario = new javax.swing.JTextField();
        txtnueva_contrasena = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(240, 220, 144));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRAR DOCTOR");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Celular:");

        text_celular_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_celular_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_celular_doctor.setText("Ingrese el celular");
        text_celular_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_celular_doctorMousePressed(evt);
            }
        });

        text_email_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_email_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_email_doctor.setText("Ingrese el E-mail");
        text_email_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_email_doctorMousePressed(evt);
            }
        });
        text_email_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_email_doctorActionPerformed(evt);
            }
        });

        text_PrimerNombre_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_PrimerNombre_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_PrimerNombre_doctor.setText("Ingrese el Primer nombre");
        text_PrimerNombre_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_PrimerNombre_doctorMousePressed(evt);
            }
        });
        text_PrimerNombre_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_PrimerNombre_doctorActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Cedula:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Primer Nombre:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Segundo Nombre:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Primer Apellido:");

        text_PrimerApellido_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_PrimerApellido_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_PrimerApellido_doctor.setText("Ingrese el Primer apellido");
        text_PrimerApellido_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_PrimerApellido_doctorMousePressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Segundo Apellido:");

        grupo_sexo.add(Femenino_doctor);
        Femenino_doctor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Femenino_doctor.setText("F");
        Femenino_doctor.setOpaque(false);

        text_SegundoApellido_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_SegundoApellido_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_SegundoApellido_doctor.setText("Ingrese el Segundo apellido");
        text_SegundoApellido_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_SegundoApellido_doctorMousePressed(evt);
            }
        });
        text_SegundoApellido_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_SegundoApellido_doctorActionPerformed(evt);
            }
        });

        grupo_sexo.add(Masculino_doctor);
        Masculino_doctor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Masculino_doctor.setText("M");
        Masculino_doctor.setOpaque(false);
        Masculino_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Masculino_doctorActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Sexo:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("E-mail:");

        combo_especialidad_doctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion" }));

        Guardar_doctor.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Guardar_doctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salvar (1).png"))); // NOI18N
        Guardar_doctor.setToolTipText("GUARDAR");
        Guardar_doctor.setBorder(null);
        Guardar_doctor.setOpaque(false);
        Guardar_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Guardar_doctorActionPerformed(evt);
            }
        });

        Regresar_doctor.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Regresar_doctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        Regresar_doctor.setToolTipText("REGRESAR");
        Regresar_doctor.setBorder(null);
        Regresar_doctor.setOpaque(false);
        Regresar_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regresar_doctorActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Dirección:");

        text_direccion_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_direccion_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_direccion_doctor.setText("Ingrese la dirección");
        text_direccion_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_direccion_doctorMousePressed(evt);
            }
        });
        text_direccion_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_direccion_doctorActionPerformed(evt);
            }
        });

        combo_sangre_doctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));

        text_cedula_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_cedula_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_cedula_doctor.setText("Ingrese la cedula");
        text_cedula_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_cedula_doctorMousePressed(evt);
            }
        });
        text_cedula_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_cedula_doctorActionPerformed(evt);
            }
        });

        text_SegundoNombre_doctor.setForeground(new java.awt.Color(102, 102, 102));
        text_SegundoNombre_doctor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_SegundoNombre_doctor.setText("Ingrese el Segundo nombre");
        text_SegundoNombre_doctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_SegundoNombre_doctorMousePressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Datos Personales");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Codigo:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("Fecha de Nacimiento:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Especialidad:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("Tipo de Sangre:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("CREAR USUARIO");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("NUEVO USUARIO:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("NUEVA CONTRASEÑA:");

        txtnuevo_usuario.setToolTipText("El usuario debe contener minimo 3 letras y 1 numero");
        txtnuevo_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnuevo_usuarioActionPerformed(evt);
            }
        });

        txtnueva_contrasena.setToolTipText("Debe contener minimo 1 letra minus, 1 mayus, 1 numero y un caracter especial, minimo 5caract. y max 20");

        jButton1.setText("MODIFICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)
                                .addGap(53, 53, 53)
                                .addComponent(txtcodigo_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(58, 58, 58)
                                .addComponent(text_PrimerNombre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(text_celular_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(34, 34, 34)
                                                .addComponent(Masculino_doctor)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Femenino_doctor))
                                            .addComponent(jLabel13))
                                        .addGap(53, 53, 53)
                                        .addComponent(Fecha_Nacimiento_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combo_especialidad_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(combo_sangre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(201, 201, 201))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel14)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_cedula_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_SegundoNombre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_PrimerApellido_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_SegundoApellido_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_direccion_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_email_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtnuevo_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnueva_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(Guardar_doctor)
                        .addGap(94, 94, 94)
                        .addComponent(Regresar_doctor)
                        .addGap(46, 46, 46)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtcodigo_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_cedula_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(text_PrimerNombre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Fecha_Nacimiento_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(text_SegundoNombre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Masculino_doctor)
                            .addComponent(Femenino_doctor))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(combo_especialidad_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_sangre_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(112, 112, 112))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_PrimerApellido_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(text_SegundoApellido_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(text_celular_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_direccion_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(txtnuevo_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(txtnueva_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_email_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Regresar_doctor)
                                    .addComponent(Guardar_doctor))))))
                .addGap(626, 626, 626))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnuevo_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnuevo_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnuevo_usuarioActionPerformed

    private void text_SegundoNombre_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_SegundoNombre_doctorMousePressed
        text_SegundoNombre_doctor.setText("");
        text_SegundoNombre_doctor.setForeground(Color.BLACK);
        // TODO add your handling code here:
    }//GEN-LAST:event_text_SegundoNombre_doctorMousePressed

    private void text_cedula_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_cedula_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_cedula_doctorActionPerformed

    private void text_cedula_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_cedula_doctorMousePressed

        text_cedula_doctor.setText("");
        text_cedula_doctor.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_cedula_doctorMousePressed

    private void text_direccion_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_direccion_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_direccion_doctorActionPerformed

    private void text_direccion_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_direccion_doctorMousePressed
        text_direccion_doctor.setText("");
        text_direccion_doctor.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_direccion_doctorMousePressed

    private void Regresar_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regresar_doctorActionPerformed
        this.dispose();
        new doctor_crud().setVisible(true);
    }//GEN-LAST:event_Regresar_doctorActionPerformed

    private void Guardar_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Guardar_doctorActionPerformed
        try {
            RegistrarDoctor();
        } catch (SQLException ex) {
            Logger.getLogger(Agregar_administrador.class.getName()).log(Level.SEVERE, null, ex);
        }

        //limpiar();

    }//GEN-LAST:event_Guardar_doctorActionPerformed

    private void Masculino_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Masculino_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Masculino_doctorActionPerformed

    private void text_SegundoApellido_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_SegundoApellido_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_SegundoApellido_doctorActionPerformed

    private void text_SegundoApellido_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_SegundoApellido_doctorMousePressed
        text_SegundoApellido_doctor.setText("");
        text_SegundoApellido_doctor.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_SegundoApellido_doctorMousePressed

    private void text_PrimerApellido_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_PrimerApellido_doctorMousePressed
        text_PrimerApellido_doctor.setText("");
        text_PrimerApellido_doctor.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerApellido_doctorMousePressed

    private void text_PrimerNombre_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_PrimerNombre_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerNombre_doctorActionPerformed

    private void text_PrimerNombre_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_PrimerNombre_doctorMousePressed
        text_PrimerNombre_doctor.setText("");
        text_PrimerNombre_doctor.setForeground(Color.BLACK);

        // TODO add your handling code here:
    }//GEN-LAST:event_text_PrimerNombre_doctorMousePressed

    private void text_email_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_email_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_email_doctorActionPerformed

    private void text_email_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_email_doctorMousePressed
        text_email_doctor.setText("");
        text_email_doctor.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_email_doctorMousePressed

    private void text_celular_doctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_celular_doctorMousePressed
        text_celular_doctor.setText("");
        text_celular_doctor.setForeground(Color.BLACK);
    }//GEN-LAST:event_text_celular_doctorMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       modificar_doctor();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void modificar_doctor() {
        String genero = "";
        if (Masculino_doctor.isSelected()) {
            genero = "hombre";
        }
        if (Femenino_doctor.isSelected()) {
            genero = "mujer";
        }
        String tipoo_sangre = combo_sangre_doctor.getSelectedItem().toString();
        String especialidad = combo_especialidad_doctor.getSelectedItem().toString();

        String dia = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.DAY_OF_MONTH));
        String mes = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.MONTH) + 1);
        String año = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.YEAR));
        String FechaNacimiento = (dia + "-" + mes + "-" + año);

        mi_cone.InsertUpdateDeleteAcciones("UPDATE persona per SET  per_primer_nombre='" + text_PrimerNombre_doctor.getText() + "', per_segundo_nombre='" + text_SegundoNombre_doctor.getText() + "'"
                + ", per_primer_apellido='" + text_PrimerApellido_doctor.getText() + "', per_segundo_apellido='" + text_SegundoApellido_doctor.getText() + "'"
                + ", per_correo='" + text_email_doctor.getText() + "', per_genero='" + genero + "', per_direccion='" + text_direccion_doctor.getText() + "', per_telefono='" + text_celular_doctor.getText() + "', per_tipo_sangre='" + tipoo_sangre + "',per_fecha_nacimiento='" + FechaNacimiento + "' WHERE per_cedula='" + text_cedula_doctor.getText() + "'");
        
        mi_cone.InsertUpdateDeleteAcciones("UPDATE doctor SET doc_especialidad='" + especialidad + "' WHERE doc_cedula='" + text_cedula_doctor.getText() + "'");

        limpiar();
    }
    public void cargarcod() {
        txtcodigo_doctor.setEnabled(false);
        txtcodigo_doctor.setText(String.valueOf(inser.cargarcodigo()));
    }

    public void RegistrarDoctor() throws SQLException {

        Insert_doctor docto = new Insert_doctor();
        Insert_usuario usu = new Insert_usuario();
        try {
            if (validaciones()) {
                if (docto.validarduplicado(text_cedula_doctor.getText())) {
                    if (usu.validarNomduplicado(txtnuevo_usuario.getText())) {
                        String genero = "";
                        //doctor.setCodigo(text_codigo_doctor.getText());
                        docto.setCedula(text_cedula_doctor.getText());
                        docto.setPri_nomb(text_PrimerNombre_doctor.getText());
                        docto.setSeg_nombre(text_SegundoNombre_doctor.getText());
                        docto.setPrim_apell(text_PrimerApellido_doctor.getText());
                        docto.setSeg_apelli(text_SegundoApellido_doctor.getText());
                        docto.setDireccion(text_direccion_doctor.getText());

                        if (Masculino_doctor.isSelected()) {
                            genero = "hombre";
                        }
                        if (Femenino_doctor.isSelected()) {
                            genero = "mujer";
                        }
                        docto.setGenero(genero);
                        docto.setCorreo(text_email_doctor.getText());
                        String dia = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.DAY_OF_MONTH));
                        String mes = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.MONTH) + 1);
                        String año = Integer.toString(Fecha_Nacimiento_doctor.getCalendar().get(Calendar.YEAR));
                        String FechaNacimiento = (dia + "-" + mes + "-" + año);
                        //String FechaNacimiento = df.format(Fecha_Nacimiento_doctor.getDate());
                        docto.setFecha_Nacimiento(FechaNacimiento);

                        docto.setTelefono(text_celular_doctor.getText());
                        docto.setTipo_sangre(combo_sangre_doctor.getSelectedItem().toString());
                        docto.InsertarPersona();
                        //Fin Persona
                        ///////////////////////////////////
                        usu.setContraseña(txtnueva_contrasena.getText());
                        usu.setUsuario(txtnuevo_usuario.getText());
                        usu.InsertarUsuario();
                        ///////////////////////////////////
                        docto.setEspecialidad(combo_especialidad_doctor.getSelectedItem().toString());
                        docto.setCedula(text_cedula_doctor.getText());
                        docto.setCod_usuario(usu.obtenerUsuario());

                        if (docto.InsertarDoctor()) {
                            System.out.println("Conexion Exitosa");
                            limpiar();
                            cargarcod();
                        } else {
                            System.out.println("Conexion Erronea");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "El nombre de usuario ya existe");
                        txtnuevo_usuario.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El doctor ya existe en el sistema");
                    text_cedula_doctor.setText("");

                }
            }
        } catch (NullPointerException n) {

        }
    }

    public boolean validaciones() {
        boolean validado = true;

        if (text_cedula_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la cedula del doctor");
        } else {
            if (!misvalidaciones.validar_cedula(text_cedula_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Cedula incorrecta");
                validado = false;
            }
        }
//
        if (text_PrimerNombre_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el nombre del doctor");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_PrimerNombre_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Primer nombre incorrecto");
                validado = false;
            }
        }
        if (text_SegundoNombre_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el nombre del doctor");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_SegundoNombre_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Segundo nombre incorrecto");
                validado = false;
            }
        }
        if (text_PrimerApellido_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el apellido del doctor");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_PrimerApellido_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Primer apellido incorrecto");
                validado = false;
            }
        }
        if (text_PrimerApellido_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el apellido del doctor");
        } else {
            if (!misvalidaciones.validar_nombre_apellido(text_PrimerApellido_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Segundo apellido incorrecto");
                validado = false;
            }
        }
        if (text_direccion_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la direccion del doctor");
        } else {
            if (!misvalidaciones.validarDireccion(text_direccion_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Direccion invalida");
                validado = false;
            }
        }
        if (text_celular_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el celular del doctor");
        } else {
            if (!misvalidaciones.validarTelefono(text_celular_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Celular invalido");
                validado = false;
            }
        }
        if (text_email_doctor.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese el correo del doctor");
        } else {
            if (!misvalidaciones.validarCorreo(text_email_doctor.getText())) {
                JOptionPane.showMessageDialog(this, "Correo invalido");
                validado = false;
            }
        }

        if (txtnuevo_usuario.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese un usuario");
        } else {
            if (!misvalidaciones.validarUsuario(txtnuevo_usuario.getText())) {
                JOptionPane.showMessageDialog(this, "Usuario invalido");
                validado = false;
            }
        }

        if (txtnueva_contrasena.getText().isEmpty()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese una contraseña");
        } else {
            if (!misvalidaciones.validarContrasena(txtnueva_contrasena.getText())) {
                JOptionPane.showMessageDialog(this, "Contraseña invalida");
                validado = false;
            }
        }

        if (combo_especialidad_doctor.getSelectedIndex() == 0) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la especialidad");
        }

        if (combo_sangre_doctor.getSelectedIndex() == 0) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Seleccione el tipo de sangre");
        }
//        System.out.println(String.valueOf(fecha_Nacimiento_paciente.getCalendar()));
        if (Fecha_Nacimiento_doctor.getDate() == null) {
            validado = false;
            JOptionPane.showMessageDialog(this, "Ingrese la fecha de nacimiento");
        }

        if (!Masculino_doctor.isSelected() && !Femenino_doctor.isSelected()) {
            validado = false;
            JOptionPane.showMessageDialog(this, "seleccione un genero");
        }

        return validado;
    }

    public void limpiar() {
        txtcodigo_doctor.setText("");
        text_cedula_doctor.setText("");
        text_PrimerNombre_doctor.setText("");
        text_SegundoNombre_doctor.setText("");
        text_PrimerApellido_doctor.setText("");
        text_SegundoApellido_doctor.setText("");
        text_direccion_doctor.setText("");
        text_email_doctor.setText("");
        text_celular_doctor.setText("");
        grupo_sexo.clearSelection();
        combo_sangre_doctor.setSelectedIndex(0);
        combo_especialidad_doctor.setSelectedIndex(0);
        Fecha_Nacimiento_doctor.setCalendar(null);
        txtnuevo_usuario.setText("");
        txtnueva_contrasena.setText("");
    }

    //Llenar especialidad
    public void LLenarComboBoxEspecialidad() {
        Insert_especialidad inser = new Insert_especialidad();
        List<especialidad> com = inser.ListaEspecialidades();

        for (int i = 0; i < com.size(); i++) {
            combo_especialidad_doctor.addItem(com.get(i).getNombre_especialidad());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(agregar_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(agregar_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(agregar_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(agregar_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new agregar_doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha_Nacimiento_doctor;
    private javax.swing.JRadioButton Femenino_doctor;
    private javax.swing.JButton Guardar_doctor;
    private javax.swing.JRadioButton Masculino_doctor;
    private javax.swing.JButton Regresar_doctor;
    private javax.swing.JComboBox<String> combo_especialidad_doctor;
    private javax.swing.JComboBox<String> combo_sangre_doctor;
    private javax.swing.ButtonGroup grupo_sexo;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextField text_PrimerApellido_doctor;
    private javax.swing.JTextField text_PrimerNombre_doctor;
    private javax.swing.JTextField text_SegundoApellido_doctor;
    private javax.swing.JTextField text_SegundoNombre_doctor;
    private javax.swing.JTextField text_cedula_doctor;
    private javax.swing.JTextField text_celular_doctor;
    private javax.swing.JTextField text_direccion_doctor;
    private javax.swing.JTextField text_email_doctor;
    private javax.swing.JTextField txtcodigo_doctor;
    private javax.swing.JTextField txtnueva_contrasena;
    private javax.swing.JTextField txtnuevo_usuario;
    // End of variables declaration//GEN-END:variables
}
